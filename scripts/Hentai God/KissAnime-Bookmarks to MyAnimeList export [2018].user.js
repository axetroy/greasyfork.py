// ==UserScript==
// @name         KissAnime-Bookmarks to MyAnimeList export [2018]
// @namespace    http://cl.1ck.me
// @version      2.0
// @description  Generates an xml-File from your KA-Bookmarks that can be imported to MAL
// @author       Hentai God
// @match        *://kissanime.ru/BookmarkList*
// @connect      myanimelist.net
// @grant        GM.xmlHttpRequest
// @grant        GM.getValue
// @grant        GM.setValue
// ==/UserScript==

function XMLWriter(a,b){if(a)this.encoding=a;if(b)this.version=b};(function(){XMLWriter.prototype={encoding:'ISO-8859-1',version:'1.0',formatting:'indented',indentChar:'\t',indentation:1,newLine:'\n',writeStartDocument:function(a){this.close();this.stack=[];this.standalone=a},writeEndDocument:function(){this.active=this.root;this.stack=[]},writeDocType:function(a){this.doctype=a},writeStartElement:function(c,d){if(d)c=d+':'+c;var a=this,b=a.active,e={n:c,a:{},c:[]};if(b){b.c.push(e);this.stack.push(b)}else a.root=e;a.active=e},writeEndElement:function(){this.active=this.stack.pop()||this.root},writeAttributeString:function(a,b){if(this.active)this.active.a[a]=b},writeString:function(a){if(this.active)this.active.c.push(a)},writeElementString:function(a,b,c){this.writeStartElement(a,c);this.writeString(b);this.writeEndElement()},writeCDATA:function(a){this.writeString('<![CDATA['+a+']]>')},writeComment:function(a){this.writeString('<!-- '+a+' -->')},flush:function(){var a=this,b='',c='',d=a.indentation,e=a.formatting.toLowerCase()=='indented',f='<?xml version="'+a.version+'" encoding="'+a.encoding+'"';if(a.stack&&a.stack[0])a.writeEndDocument();if(a.standalone!==undefined)f+=' standalone="'+!!a.standalone+'"';f+=' ?>';f=[f];if(a.doctype&&a.root)f.push('<!DOCTYPE '+a.root.n+' '+a.doctype+'>');if(e){while(d--)b+=a.indentChar}if(a.root)k(a.root,c,b,f);return f.join(e?a.newLine:'')},close:function(){var a=this;if(a.root)j(a.root);a.active=a.root=a.stack=null},getDocument:window.ActiveXObject?function(){var a=new ActiveXObject('Microsoft.XMLDOM');a.async=!1;a.loadXML(this.flush());return a}:function(){return(new DOMParser()).parseFromString(this.flush(),'text/xml')}};function j(a){var l=a.c.length;while(l--){if(typeof a.c[l]=='object')j(a.c[l])}a.n=a.a=a.c=null};function k(a,b,c,d){var e=b+'<'+a.n,f=a.c.length,g,h,i=0;for(g in a.a)e+=' '+g+'="'+a.a[g]+'"';e+=f?'>':' />';d.push(e);if(f){do{h=a.c[i++];if(typeof h=='string'){if(f==1)return d.push(d.pop()+h+'</'+a.n+'>');else d.push(b+c+h)}else if(typeof h=='object')k(h,b+c,c,d)}while(i<f);d.push(b+'</'+a.n+'>')}}})();

var blobData = (function () {
    var a = document.createElement("a");
    document.body.appendChild(a);
    a.style = "display: none";
    return function (data) {
        var xml = data,
            blob = new Blob([xml], {type: "octet/stream"}),
            url = window.URL.createObjectURL(blob);
        return url;
    };
}());


var current = 0;
var working = 0;

const all = document.getElementsByClassName("trAnime");
const animes = document.getElementsByClassName("aAnime");
var watchedcomplete = 0;
var ongoing = 0;
var unwatched = 0;
var notaired = 0;
var total = all.length;

function init(threads) {
    document.documentElement.innerHTML += "<div style='position:fixed;top:0px;left:0px;width:100%;height:100%;background-color:white;color:black;text-align:center;z-index:100000;' id='BMMAL'></div>";
    var span = document.createElement("span");
    span.id = "counter";
    var bar = document.createElement("progress");
    bar.setAttribute("value", 0);
    bar.setAttribute("max", total);
    bar.style = "width: 100%;";
    bar.id = "bar";
    var alertEl = document.createElement("span");
    alertEl.id = "alertHolder";
    alertEl.style = "color: red;";
    document.getElementById("BMMAL").appendChild(bar);
    document.getElementById("BMMAL").appendChild(span);
    document.getElementById("BMMAL").appendChild(document.createElement("br"));
    document.getElementById("BMMAL").appendChild(alertEl);
    for(var i = 1; i <= threads; i++) mainLoop(i);
}

var v = new XMLWriter();
v.encoding = "UTF-8";
v.writeStartDocument(true);
v.writeStartElement('myanimelist');
v.writeComment("Document generated by the KA-BookMarks to MAL Script v2.0!");
v.writeComment("Created by TheTh0rus!");

function httpRequest(url, query, param, threadNum) {
    GM.xmlHttpRequest({
        method: "GET",
        url: url + encodeURI(query),
        synchronous: true,
        headers: {
            "User-Agent": "Mozilla/5.0"
        },
        onload: function(response) {
            if(response.responseText.indexOf("Too Many Requests") == -1) {
                if(url.indexOf("anime.php") > -1) {
                    handleSearch(response.responseText, param, query, threadNum);
                    console.log(current);
                } else {
                    handleAnime(response.responseText, param, url, threadNum);
                }
            } else {
                if(param == "Completed") {
                    watchedcomplete -= 1;
                } else {
                    unwatched -= 1;
                }
                working -= 1;
                addAlert("MAL refused access due to too many requests. Waiting 30 seconds... (Thread " + threadNum + ")");
                setTimeout(function() { mainLoop(threadNum); }, 30000);
            }
        }
    });
}

function handleSearch(data, param, query, threadNum) {
    try {
        var link = data.split(' <a class="hoverinfo_trigger" href="')[1].split('"')[0];
        console.log("searching for '" + query + "'...");
        httpRequest(link, "", param, threadNum);
    } catch(e) {
        handleError("could not find anime '" + query + "'", threadNum);
    }
}


function handleAnime(data, param, url, threadNum) {
    try {
        console.log("handling anime: " + url);
        var watched = 0;
        if(param == "Completed") {
            watched = data.split('<span class="dark_text">Episodes:</span>')[1].split('</div>')[0];
        }
        v.writeStartElement('anime');
        v.writeElementString('series_animedb_id',""+url.split('https://myanimelist.net/anime/')[1].split('/')[0]+"");
        v.writeElementString('my_status',""+param+"");
        v.writeElementString('update_on_import','1');
        v.writeElementString('my_watched_episodes',""+watched+"");
        v.writeEndElement();
    } catch(e) {
        handleError("Scraping-error at " + url);
    }
    current += 1;
    document.getElementById("bar").value += 1;
    document.getElementById("counter").innerHTML = "<b>" + current + " / " + total + "</b>";
    mainLoop(threadNum);
}



function handleError(msg, threadNum) {
    console.log(msg);
    addAlert(msg);
    mainLoop(threadNum);
}

function addAlert(txt) {
    document.getElementById("alertHolder").innerHTML += "<br>" + txt;
}

function mainLoop(threadNum) {
    var i = working;

    if(i < animes.length) {

        var title = animes[i].innerHTML;
        title = title.replace(' (Dub)','');
        title = title.replace(' (Sub)','');
        title = title.replace('(Dub)','');
        title = title.replace('(Sub)','');
        title = title.replace('                 ','');
        title = title.replace('                ','');
        title = title.replace('  ','');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');
        title = title.replace(' ','-');

        if(all[i].innerHTML.indexOf("Completed") > -1 && all[i].innerHTML.indexOf('style="display: inline" class="aRead"') > -1) {
            watchedcomplete += 1;  
            working += 1;
            httpRequest("http://myanimelist.net/anime.php?q=", title, "Completed", threadNum);
        }
        if(all[i].innerHTML.indexOf("Completed") == -1 && all[i].innerHTML.indexOf("Not yet aired") == -1) {
            ongoing += 1;  
            current += 1;
            working += 1;
        }
        if(all[i].innerHTML.indexOf('style="display: inline" class="aUnRead"') > -1) {
            unwatched += 1;  
            working += 1;
            httpRequest("http://myanimelist.net/anime.php?q=", title, "Plan to Watch", threadNum);
        }

        if(all[i].innerHTML.indexOf("Not yet aired") > -1) {
            notaired += 1;  
            current += 1;
            working += 1;
        }

    } 

}


setInterval(function() {
    if(current == total) {
        v.writeStartElement('myinfo');

        v.writeElementString('user_export_type','1');
        v.writeElementString('user_total_anime',""+total+"");
        v.writeElementString('user_total_watching','0');
        v.writeElementString('user_total_completed',""+watchedcomplete+"");
        v.writeElementString('user_total_onhold','0');
        v.writeElementString('user_total_dropped','0');
        v.writeElementString('user_total_plantowatch',""+unwatched+"");

        v.writeEndElement();
        v.writeEndElement();
        v.writeEndDocument();
        document.getElementById("BMMAL").innerHTML = "<h3><a href='" + blobData(v.flush().replace('"true"','"yes"')) + "' id='MALdl' style='color:blue;font-weight:bold;' download='importToMAL.xml'>Download</a></h3>";


        current = 100000;
    } }, 1000);







init(3);