// ==UserScript==
// @name         KissAnime-Bookmarks to MyAnimeList export [FIREFOX-VERSION]
// @namespace    http://cl.1ck.me
// @version      1.3
// @description  Generates an xml-File from your KA-Bookmarks that can be imported to MAL
// @author       TheTh0rus
// @match        *://kissanime.ru/BookmarkList*
// @connect      myanimelist.net
// @grant        GM_xmlhttpRequest
// @grant       GM_getValue
// @grant       GM_setValue
// ==/UserScript==

function XMLWriter(a,b){if(a)this.encoding=a;if(b)this.version=b};(function(){XMLWriter.prototype={encoding:'ISO-8859-1',version:'1.0',formatting:'indented',indentChar:'\t',indentation:1,newLine:'\n',writeStartDocument:function(a){this.close();this.stack=[];this.standalone=a},writeEndDocument:function(){this.active=this.root;this.stack=[]},writeDocType:function(a){this.doctype=a},writeStartElement:function(c,d){if(d)c=d+':'+c;var a=this,b=a.active,e={n:c,a:{},c:[]};if(b){b.c.push(e);this.stack.push(b)}else a.root=e;a.active=e},writeEndElement:function(){this.active=this.stack.pop()||this.root},writeAttributeString:function(a,b){if(this.active)this.active.a[a]=b},writeString:function(a){if(this.active)this.active.c.push(a)},writeElementString:function(a,b,c){this.writeStartElement(a,c);this.writeString(b);this.writeEndElement()},writeCDATA:function(a){this.writeString('<![CDATA['+a+']]>')},writeComment:function(a){this.writeString('<!-- '+a+' -->')},flush:function(){var a=this,b='',c='',d=a.indentation,e=a.formatting.toLowerCase()=='indented',f='<?xml version="'+a.version+'" encoding="'+a.encoding+'"';if(a.stack&&a.stack[0])a.writeEndDocument();if(a.standalone!==undefined)f+=' standalone="'+!!a.standalone+'"';f+=' ?>';f=[f];if(a.doctype&&a.root)f.push('<!DOCTYPE '+a.root.n+' '+a.doctype+'>');if(e){while(d--)b+=a.indentChar}if(a.root)k(a.root,c,b,f);return f.join(e?a.newLine:'')},close:function(){var a=this;if(a.root)j(a.root);a.active=a.root=a.stack=null},getDocument:window.ActiveXObject?function(){var a=new ActiveXObject('Microsoft.XMLDOM');a.async=!1;a.loadXML(this.flush());return a}:function(){return(new DOMParser()).parseFromString(this.flush(),'text/xml')}};function j(a){var l=a.c.length;while(l--){if(typeof a.c[l]=='object')j(a.c[l])}a.n=a.a=a.c=null};function k(a,b,c,d){var e=b+'<'+a.n,f=a.c.length,g,h,i=0;for(g in a.a)e+=' '+g+'="'+a.a[g]+'"';e+=f?'>':' />';d.push(e);if(f){do{h=a.c[i++];if(typeof h=='string'){if(f==1)return d.push(d.pop()+h+'</'+a.n+'>');else d.push(b+c+h)}else if(typeof h=='object')k(h,b+c,c,d)}while(i<f);d.push(b+'</'+a.n+'>')}}})();

var current = 0;

const allwatched = document.getElementsByClassName("trAnime");
const animes = document.getElementsByClassName("aAnime");
var watchedcomplete = 0;
var ongoing = 0;
var unwatched = 0;
var notaired = 0;
var total = allwatched.length+1;

var v = new  XMLWriter();
v.encoding = "UTF-8";
v.writeStartDocument(true);
v.writeStartElement('myanimelist');
v.writeComment("Document generated by the KA-BookMarks to MAL Script v1.5!");
v.writeComment("Created by TheTh0rus!");

function httpRequest(url, param, all, animes) {
    var res = null;
    GM_xmlhttpRequest({
        method: "GET",
        url: url,
        synchronous: true,
        headers: {
            "User-Agent": "Mozilla/5.0"
        },
        onload: function(response) {

            if(url.indexOf("anime.php") > -1) {
                handeSearch(response.responseText, param, all, animes);
            } else {
                console.log(url);
                handeAnime(response.responseText, param, url, all, animes);
            }

        }
    });
}

function handeSearch(data, param, all, animes) {
    var link = data.split(' <a class="hoverinfo_trigger" href="')[1].split('"')[0];
    httpRequest(link, param, all, animes);
}


function handeAnime(data, param, url, all, animes) {
    try {
        var watched = 0;
        if(param == "Completed") {
            watched = data.split('<span class="dark_text">Episodes:</span>')[1].split('</div>')[0];
        }
        v.writeStartElement('anime');
        v.writeElementString('series_animedb_id',""+url.split('https://myanimelist.net/anime/')[1].split('/')[0]+"");
        v.writeElementString('my_status',""+param+"");
        v.writeElementString('update_on_import','1');
        v.writeElementString('my_watched_episodes',""+watched+"");
        v.writeEndElement();
    } catch(e) {
        console.log("error at " + url);
    }

    current += 1;
    document.documentElement.innerHTML += "<div style='position:fixed;top:0px;left:0px;width:100%;height:100%;background-color:white;color:black;'<center><b>" + (current + 1) + " / " + total + "</b><br></center>";
    main(all, animes);
}

function main(all, animes) {
    var i = current;

    var title = animes[i].innerHTML;
    title = title.replace(' (Dub)','');
    title = title.replace(' (Sub)','');
    title = title.replace('(Dub)','');
    title = title.replace('(Sub)','');
    title = title.replace('                 ','');
    title = title.replace('                ','');
    title = title.replace('  ','');
    title = title.replace(' ','-');
    title = title.replace(' ','-');
    title = title.replace(' ','-');
    title = title.replace(' ','-');
    title = title.replace(' ','-');
    title = title.replace(' ','-');
    title = title.replace(' ','-');
    title = title.replace(' ','-');
    title = title.replace(' ','-');

    if(all[i].innerHTML.indexOf("Completed") > -1 && all[i].innerHTML.indexOf('style="display: inline" class="aRead"') > -1) {
        watchedcomplete += 1;  
        httpRequest("http://myanimelist.net/anime.php?q=" + encodeURI(title), "Completed", all, animes);
    }
    if(all[i].innerHTML.indexOf("Completed") == -1 && all[i].innerHTML.indexOf("Not yet aired") == -1) {
        ongoing += 1;  
        current += 1;
    }
    if(all[i].innerHTML.indexOf('style="display: inline" class="aUnRead"') > -1) {
        unwatched += 1;  
        httpRequest("http://myanimelist.net/anime.php?q=" + encodeURI(title), "Plan to Watch", all, animes);
    }

    if(all[i].innerHTML.indexOf("Not yet aired") > -1) {
        notaired += 1;  
        current += 1;
    }


    v.writeStartElement('myinfo');

    v.writeElementString('user_export_type','1');
    v.writeElementString('user_total_anime',""+total+"");
    v.writeElementString('user_total_watching','0');
    v.writeElementString('user_total_completed',""+watchedcomplete+"");
    v.writeElementString('user_total_onhold','0');
    v.writeElementString('user_total_dropped','0');
    v.writeElementString('user_total_plantowatch',""+unwatched+"");

    v.writeEndElement();

}

setTimeout(function() { main(allwatched, animes); }, 500);

    setInterval(function() {
        console.log(total-2);
        if(current >= total-2) {
            v.writeEndElement();
            v.writeEndDocument();
            document.documentElement.innerHTML += "<center><form action='http://anime.1ck.me/projects/kaBookmarks/myBookmarks.php' method='POST'><input type='hidden' value='" + v.flush().replace('"true"','"yes"') + "' name='xml'><input type='submit' value='Download your list here!'></form></center>";
        } }, 1000);