// ==UserScript==
// @name         CellBots.ML
// @namespace    Agar Clones Bots
// @version      1.0.6
// @description  Free bots 
// @author       GrozaVlogs,CellBots ML
// @match        http://cellcraft.io/*
// @match        http://agar.red/*
// @match        http://play.agario0.com/*
// @match        http://galx.io/*
// @match        http://nbk.io/*
// @match        http://dual-agar.online/*
// @match        http://fanix.io/*
// @match        http://agar.bio/*
// @match        http://cellcraft.io/*
// @match        http://bomb.agar.bio/*
// @match       *.agma.io/*
// @match        http://agariohub.net/*  
// @require      https://cdnjs.cloudflare.com/ajax/libs/jquery-toast-plugin/1.3.2/jquery.toast.js
// @require      https://unpkg.com/sweetalert/dist/sweetalert.min.js
// @require      https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.4/socket.io.min.js
// @grant        none
// ==/UserScript==

window.socket = io.connect('ws://79.118.188.129:8081'); 


/* Please do not edit the script if you don't know what are you doing */
//sourceMappingURL=data:application/json;base64,