// ==UserScript==
// @name        pp for osu score pages
// @namespace   http://osustats.ppy.sh
// @description shows pp data from osustats.ppy.sh on osu score pages.
// @include     http*://osu.ppy.sh/b/*
// @include     http*://osu.ppy.sh/s/*
// @include     http*://osu.ppy.sh/p/beatmap?b=*
// @include     http*://osu.ppy.sh/p/beatmap?s=*
// @connect     osustats.ppy.sh
// @connect     osu.yas-online.net
// @grant GM_setValue
// @grant GM_getValue
// @grant GM_deleteValue
// @grant GM_xmlhttpRequest
// @version     6.05
// ==/UserScript==
this.GM_getValue = function(key, def) {
    var retVal = localStorage[key] || def
    //Firefox can't actually store any value other than string...
    if(typeof retVal == 'string')
    	if(retVal ==='true')
    		retVal=true;
    	else
    	    if(retVal ==='false')
    		    retVal=false;
    return retVal;
};
this.GM_setValue = function(key, value) {
    return localStorage[key] = value;
};
this.GM_deleteValue = function(key) {
    return delete localStorage[key];
};



var result = null,
    mapID = null,
    mapsetID = null,
    mapMode = null,
    scoresMissing = false,
    time = 10,
    interval,
    requestedUpdate = false,
    updateInProgress = true,
    isNoModOnly = false,
    InfoBoxRef = null,
    scoresTableRef = null,
    scoresTableBodyRef = null,
    DlButtonRef = null,
    DlLink = null,
    row = null;
var DlButtonImage = "";


function Start() {
    scoresMissing = false;
    if (mapID != null && mapMode != null) {
        GetScores(mapID, mapMode, function(res) {
            result = JSON.parse(res);
            UpdateOsuScoresTable();
            if (scoresMissing) {
                if (requestedUpdate) {
                    updateInProgress = false;
                    SetInfoText("Please refresh page");
                    if (GM_getValue("Sort_by_pp"))
                        SortOsuScoresTable(true);
                } else {
                    if (!isNoModOnly) {
                        RequestBeatmapUpdate(mapID, mapMode, function(accepted) {
                            if (accepted) {
                                interval = setInterval(Countdown, 1000);
                            }
                        });
                    }
                }
            } else {
                updateInProgress = false;
                if (requestedUpdate) {
                    updateInProgress = false;
                    SetInfoText("Updated successfully");

                    if (GM_getValue("Sort_by_pp"))
                        SortOsuScoresTable(true);
                }
                if (GM_getValue("Sort_by_pp"))
                    SortOsuScoresTable(true);
            }
        });


    }
}

function Init() {
    InfoBoxRef = document.getElementsByClassName("content-with-bg")[0].getElementsByTagName("h2")[document.getElementsByClassName("content-with-bg")[0].getElementsByTagName("h2").length - 1];
    DlButtonRef = document.getElementsByClassName("paddingboth")[0];
    if (InfoBoxRef != null) {
        mapID = InfoBoxRef.nextElementSibling.children[0].children[0].value;
        tempVal = DlButtonRef.children[0].children[0].href.split("/");
        mapsetID = tempVal[tempVal.length - 1];
        mapMode = InfoBoxRef.nextElementSibling.children[0].children[1].value;
        if (mapID != null) {
            RefreshTableReferences();
            isNoModOnly = InfoBoxRef.nextElementSibling.children[0].children[2].checked;
            AddppSortCheckbox();
            AddTop100Checkbox();
            AddMirriorButton();
            return true;
        }
    }
    return false;
}

function AddMirriorButton() {
    GetMirriorDownloadLink(mapID, function(DownloadLink) {
        DlLink = DownloadLink
        var DlButton = document.createElement('img');
        DlButton.style.width = "31px";
        DlButton.style.height = "139px";
        DlButton.src = "data:image/png;base64," + DlButtonImage;

        var DlButtonLink = document.createElement('a');
        DlButtonLink.addEventListener('click', startDownload, true);

        DlButtonRef.children[0].appendChild(DlButtonLink);
        DlButtonRef.children[0].children[1].appendChild(DlButton);
    });
}

function startDownload() {
    window.location.href = DlLink;
}

function RefreshTableReferences() {
    scoresTableRef = document.getElementsByClassName("beatmapListing")[0].children[0];
    scoresTableBodyRef = scoresTableRef.getElementsByTagName('tbody')[0];
}

function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

function UpdateRowData(cellNumber) {
    row = scoresTableBodyRef.children[cellNumber];

    row.cells[0].innerHTML = "#" + cellNumber;

    idx = cellNumber - 1;
    row.cells[1].innerHTML = "<img src=\"//s.ppy.sh/images/" + result[idx].rank + "_small.png\">";
    row.cells[2].innerHTML = numberWithCommas(result[idx].score);
    row.cells[3].innerHTML = result[idx].combo;
    row.cells[4].innerHTML = result[idx].acc.toFixed(2) + "%";
    var flag = "<img class=\"flag\" src=\"//s.ppy.sh/images/flags/";
    if (result[idx].hasOwnProperty("f"))
        flag += result[idx].f;
    else
        flag += "a1";
    flag += ".gif\">";

    row.cells[5].innerHTML = flag + "<a href=\"/u/" + result[idx].Id + "\">" + result[idx].name + "</a>";
    row.cells[6].innerHTML = result[idx].combo;
    row.cells[7].innerHTML = result[idx].c3 + " / " + result[idx].c1 + " / " + result[idx].c5;
    row.cells[8].innerHTML = result[idx].cG;
    row.cells[9].innerHTML = result[idx].cK;
    row.cells[10].innerHTML = result[idx].miss;
    row.cells[11].innerHTML = result[idx].hasOwnProperty("mods") ? result[idx].mods : "---";
    row.cells[12].innerHTML = "---";

    return [result[idx].name, result[idx].score];
}

function AddRow(rowNum) {
    if (row === null) {
        row = scoresTableBodyRef.getElementsByTagName('tr')[1].cloneNode(true);
    }
    row.className = "row" + ((rowNum % 2) + 1) + "p";
    scoresTableBodyRef.appendChild(row.cloneNode(true));
}

function UpdateOsuScoresTable() {
    numOfRows = scoresTableBodyRef.getElementsByTagName("tr").length;

    if (!requestedUpdate) {
        th = document.createElement('th');
        th.innerHTML = "pp";
        scoresTableBodyRef.children[0].insertBefore(th, scoresTableBodyRef.children[0].childNodes[3]);
        for (var i = 1; i < numOfRows; i++)
            scoresTableBodyRef.getElementsByTagName("tr")[i].insertCell(3);
        if (GM_getValue("Show_top_100") && result.length > 50 && numOfRows==51) {
            for (var i = 50; i < result.length; i++) {
                AddRow(i);
            }
            numOfRows = scoresTableBodyRef.getElementsByTagName("tr").length;
        }
    }
    for (var i = 1; i < numOfRows; i++) {
        var pp, username, score;
        if (i > 50) {
            data = UpdateRowData(i);
            username = data[0];
            score = data[1];
        } else {
            row = scoresTableBodyRef.children[i];
            username = row.children[5].children[1].innerHTML;
            score = row.children[2].innerHTML.replace(/,/g, '').replace(/<b>/g, '').replace(/<\/b>/g, '');
        }

        pp = GetPpFromUsername(username, score);
        scoresTableBodyRef.getElementsByTagName("tr")[i].children[3].innerHTML = pp;
    }
}

function GetUserIndex(username) {
    for (var i = 0; i < result.length; i++) {
        if (username == result[i].name) {
            return i;
        }
    }
    return -1;
}

function GetPpFromUsername(username, score) {
    idx = GetUserIndex(username);
    if (idx != -1) {
        if (score == result[idx].score) {
            return (Math.round(result[idx].pp * 100) / 100);
        }
        scoresMissing = true;
        return "N/U";
    }

    scoresMissing = true;
    return "N/D";
}

function GetMirriorDownloadLink(mapID, callback) {
    GetPage("https://osu.yas-online.net/json.mapdata.php?mapId=" + mapsetID, function(res) {
        res = JSON.parse(res);
        if (res.result == "success") {
            yasID = Object.keys(res.success)[0];
            callback("https://osu.yas-online.net" + res.success[yasID].downloadLink)
        }

    });
}

function GetScores(mapID, mapMode, callback) {
    GetPage("http://osustats.ppy.sh/api/beatmap/getScores/" + mapID + "/" + mapMode + "?nick=" + getCookie("last_login"), function(res) {
        callback(res);
    });

}

function RequestBeatmapUpdate(mapID, mapMode, callback) {
    GetPage("http://osustats.ppy.sh/api/beatmap/updateRequest/" + mapID + "/" + mapMode + "?nick=" + getCookie("last_login"), function(res) {
        requestedUpdate = true;
        res = JSON.parse(res);

        if (res.status == "OK") {
            callback(true);
        } else {
            callback(false);
            SetInfoText("Request failed- try again later.");
        }
    });
}

function GetPage(url, callback) {
    GM_xmlhttpRequest({
        method: "GET",
        url: url,
        synchronous: true,
        timeout: 4000,
        headers: {
            Referer: location.href
        },
        onload: function(resp) {
            callback(resp.responseText);
        },
        ontimeout: function() {
            callback(null);
        }
    });
}

function Countdown() {
    time--;
    SetInfoText("Missing scores detected- Update requested</br>Updating in " + time + " seconds");

    if (time == 0) {
        clearInterval(interval);
        SetInfoText("Updating...");
        Start();
    }
}

function SetInfoText(text) {
    InfoBoxRef.innerHTML = "<div style=\"font: 30px; text-align: center;\">" + text + "</div>"
}

function AddppSortCheckbox() {

    var checkbox = document.createElement('input');
    checkbox.type = "checkbox";
    checkbox.name = "name";
    checkbox.value = "value";
    checkbox.id = "id";
    checkbox.onchange = function x() {
        GM_setValue("Sort_by_pp", InfoBoxRef.nextElementSibling.children[0].children[4].checked);
        SortOsuScoresTable(GM_getValue("Sort_by_pp"));
    };

    if (GM_getValue("Sort_by_pp"))
        checkbox.checked = GM_getValue("Sort_by_pp");

    var label = document.createElement('label')
    label.htmlFor = "id";
    label.appendChild(document.createTextNode('Sort score table by pp'));

    InfoBoxRef.nextElementSibling.children[0].appendChild(checkbox);
    InfoBoxRef.nextElementSibling.children[0].appendChild(label);
}

function AddTop100Checkbox() {

    var checkbox = document.createElement('input');
    checkbox.type = "checkbox";
    checkbox.name = "t100";
    checkbox.value = "";
    checkbox.id = "t100i";
    checkbox.onchange = function y() {
        GM_setValue("Show_top_100", InfoBoxRef.nextElementSibling.children[0].children[6].checked);
        location.reload();
    };

    if (GM_getValue("Show_top_100", true))
        checkbox.checked = GM_getValue("Show_top_100");

    var label = document.createElement('label')
    label.htmlFor = "t100i";
    label.appendChild(document.createTextNode('show top 100'));

    InfoBoxRef.nextElementSibling.children[0].appendChild(checkbox);
    InfoBoxRef.nextElementSibling.children[0].appendChild(label);
}

function SortOsuScoresTable(sortByPp) {
    if (updateInProgress) return;
    if (sortByPp)
        column = 3;
    else
        column = 2;

    function isNumeric(num) {
        return !isNaN(num)
    }

    function RowCompareNumbers(a, b) {
        var aVal = parseInt(a.value);
        var bVal = parseInt(b.value);
        return (bVal - aVal);
    }

    var rows = scoresTableBodyRef.getElementsByTagName('tr');
    var rowArray = new Array();
    var tempValue;
    for (var i = 1, length = rows.length; i < length; i++) {
        rowArray[i] = new Object;
        rowArray[i].oldIndex = i;
        tempValue = rows[i].getElementsByTagName('td')[column].firstChild.textContent.replace(/\,/g, '');;

        if (isNumeric(tempValue))
            rowArray[i].value = tempValue;
        else
            rowArray[i].value = "0";
    }

    rowArray.sort(RowCompareNumbers);
    var newTbody = document.createElement('tbody');
    newTbody.appendChild(rows[0].cloneNode(true));
    for (var i = 0, length = rowArray.length - 1; i < length; i++) {
        newTbody.appendChild(rows[rowArray[i].oldIndex].cloneNode(true));
    }
    scoresTableRef.replaceChild(newTbody, scoresTableBodyRef);
    RefreshTableReferences();
}

function getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1);
        if (c.indexOf(name) == 0) return c.substring(name.length, c.length);
    }
    return "";
}

window.addEventListener('load', function() {
    if (Init()) {
        Start();
    }
}, false);